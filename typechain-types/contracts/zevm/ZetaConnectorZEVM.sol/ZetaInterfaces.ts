/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface ZetaInterfacesInterface extends utils.Interface {
  functions: {};

  events: {
    "ZetaReceived(bytes,uint256,address,uint256,bytes,bytes32)": EventFragment;
    "ZetaReverted(address,uint256,uint256,bytes,uint256,bytes,bytes32)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ZetaReceived"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ZetaReverted"): EventFragment;
}

export interface ZetaReceivedEventObject {
  zetaTxSenderAddress: string;
  sourceChainId: BigNumber;
  destinationAddress: string;
  zetaValue: BigNumber;
  message: string;
  internalSendHash: string;
}
export type ZetaReceivedEvent = TypedEvent<
  [string, BigNumber, string, BigNumber, string, string],
  ZetaReceivedEventObject
>;

export type ZetaReceivedEventFilter = TypedEventFilter<ZetaReceivedEvent>;

export interface ZetaRevertedEventObject {
  zetaTxSenderAddress: string;
  sourceChainId: BigNumber;
  destinationChainId: BigNumber;
  destinationAddress: string;
  remainingZetaValue: BigNumber;
  message: string;
  internalSendHash: string;
}
export type ZetaRevertedEvent = TypedEvent<
  [string, BigNumber, BigNumber, string, BigNumber, string, string],
  ZetaRevertedEventObject
>;

export type ZetaRevertedEventFilter = TypedEventFilter<ZetaRevertedEvent>;

export interface ZetaInterfaces extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ZetaInterfacesInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "ZetaReceived(bytes,uint256,address,uint256,bytes,bytes32)"(
      zetaTxSenderAddress?: null,
      sourceChainId?: PromiseOrValue<BigNumberish> | null,
      destinationAddress?: PromiseOrValue<string> | null,
      zetaValue?: null,
      message?: null,
      internalSendHash?: PromiseOrValue<BytesLike> | null
    ): ZetaReceivedEventFilter;
    ZetaReceived(
      zetaTxSenderAddress?: null,
      sourceChainId?: PromiseOrValue<BigNumberish> | null,
      destinationAddress?: PromiseOrValue<string> | null,
      zetaValue?: null,
      message?: null,
      internalSendHash?: PromiseOrValue<BytesLike> | null
    ): ZetaReceivedEventFilter;

    "ZetaReverted(address,uint256,uint256,bytes,uint256,bytes,bytes32)"(
      zetaTxSenderAddress?: null,
      sourceChainId?: null,
      destinationChainId?: PromiseOrValue<BigNumberish> | null,
      destinationAddress?: null,
      remainingZetaValue?: null,
      message?: null,
      internalSendHash?: PromiseOrValue<BytesLike> | null
    ): ZetaRevertedEventFilter;
    ZetaReverted(
      zetaTxSenderAddress?: null,
      sourceChainId?: null,
      destinationChainId?: PromiseOrValue<BigNumberish> | null,
      destinationAddress?: null,
      remainingZetaValue?: null,
      message?: null,
      internalSendHash?: PromiseOrValue<BytesLike> | null
    ): ZetaRevertedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
