/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ERC20Custody,
  ERC20CustodyInterface,
} from "../../../../contracts/evm/ERC20Proxy.sol/ERC20Custody";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ERC20Custody__factory {
  static readonly abi = _abi;
  static createInterface(): ERC20CustodyInterface {
    return new utils.Interface(_abi) as ERC20CustodyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Custody {
    return new Contract(address, _abi, signerOrProvider) as ERC20Custody;
  }
}
